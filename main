import pygame, time, random

pygame.init()
screen_size = width, height = 400, 300
screen = pygame.display.set_mode(screen_size)
pygame.display.set_caption('Snake!')

block = 10


clock = pygame.time.Clock()

font_style = pygame.font.SysFont(None, 50)

def message(msg,color):
    mesg = font_style.render(msg, True, color)
    screen.blit(mesg, [4*width/14, 4*height/15])

# class snake:
#     def __init__(self) -> None:
#         pass
#     def snake_

class food:
    # Creating food for the snake. Each coordinate is rounded to 10 px, they are recreated until there is no collision with the snake
    def __init__(self, player_xy) -> None:
        self.player_xy = player_xy
    def food_x(self):
        return round(random.randrange(0, width-block)/10)*10
    def food_y(self):
        return round(random.randrange(0, height-block)/10)*10

    def food_creation(self):
        food_xy = [self.food_x(), self.food_y()]
        while food_xy == self.player_xy:
            food_xy = [self.food_x(), self.food_y()]
        return food_xy


def main():
    game_loop = True

    player_xy = [width/2, height/2]
    head = player_xy.copy()
    snake_coords = []
    snake_coords.append(head)
    snake_length = 1
    movement =[0,0]

    f = food(player_xy)
    food_xy = f.food_creation()


    while game_loop:

        # Keyboard Control 
        for event in pygame.event.get():
            if event.type == pygame.QUIT: game_loop = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    movement = [-block, 0]
                if event.key == pygame.K_RIGHT:
                    movement = [block, 0]
                if event.key == pygame.K_UP:
                    movement = [0, -block]
                if event.key == pygame.K_DOWN:
                    movement = [0, block]

        player_xy[0] = player_xy[0]+movement[0]
        player_xy[1] = player_xy[1]+movement[1]

        # Collision with wall 
        if player_xy[0] < 0 or player_xy[0] > width or player_xy[1] < 0 or player_xy[1] > height:
            game_loop = False

        # Collision with itself
        for coordinate in snake_coords[:-1]:
            if coordinate == player_xy: game_loop = False

        # Eating food
        if player_xy == food_xy:
            food_xy = f.food_creation()
            snake_length+=1
        
        # Snake location
        if player_xy != snake_coords[-1]: #ensuring part of snake won't disappear if the loop is too fast
            head = player_xy.copy()
            snake_coords.append(head)
        if len(snake_coords) > snake_length:
            del snake_coords[0]
        print(snake_coords)
        

        # Image refresh
        screen.fill((255,255,255))
        pygame.draw.rect(screen,(0,255,0),[food_xy[0], food_xy[1], block, block])
        for coordinate in snake_coords:
            pygame.draw.rect(screen,(0,0,0),[coordinate[0], coordinate[1], block, block])
        pygame.display.update()

        clock.tick(10)
        
    message('Game over', (255, 0, 255))
    pygame.display.update()
    time.sleep(1)

    pygame.quit()
    quit()  

main()